<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bttnCapture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAA7xJREFUWEftVV1vE1cQ7R9xpPgju/5ee2OvHZkkkFIkaiDgSBUhQShV6QPYaRMI
        QWqUNm2aBtRWadW0fD0FwQvQIJ6An9D2N53O3Ht3d66x2uYpqpSRjmbmzLkzo9279ns4ZDta4P+3wJOn
        T7H3+DH29gjsBbh2UDvQAvPz82g2m4Qx4zXGOB/T3BxpDmIDF/jjz7/w2737eP3mrWG0tVqteHAjXkCi
        1Tpm1P/NBi6w8c3XmJ4+j+vdrmGA2UuzaDQbaAQGDQHKA5FfnJ01p/7d3lmgVqsZ1FGrm7heRxAECMjX
        yTOCwHCR13zd5HU6W496GYzWzJTYrAWWl2+gt7iIbi9Gj/0AjnUKJla84UJ9f52xRDOkWQsE9CjL5bKN
        UimKS4KXcblsNCXJDQY/HWnWAmN0k/2qj2q1quFXKefYh09x1SdPeWdmBj/u/IRnv+/j2Yt9Fc8Qxzo+
        9+CLBG4uZEzOZ+KePEOatQBfoEqlAo/Avh/cYGv7Dp7vv8QnVz/F1NQU4X0VM8c11lz9yMH0qbw6E/YK
        PX890vpeQRA9Kk88tnLZU35tfR0//7ILz6vYGq+smnNtbf3LSM/ei2Kt/8dXwDe1RO+8VCSwNygSJicn
        8fzlK/VIFdenYXDtBWkmSKs0sm70PEOatYDvj6JQLKBQMFBxUeF6dxErq7dNHmoolnrCzVuruNbtWZzU
        +KO+mabNWqBSrSCfzxNyyBHCmLG2/hX9zF5WXM4grGmd5ubmLqvXEHNxH44rdEekWQt4nodsNieQjXBj
        ZRVXFhZ0nov5flxZ+Ji0t/r4uCfPkGYtUKLv2HUdOK4Lx3HhOg5B+wudGWx8u0V1XVMgrdbrM1zb2NzC
        +U5H8ZxrxD35HkizFigWixgZGcGIQ2Av4LpZ7N57iJMfnIp51kVaR9V27z9SWoc4hzj2kZY8z5BmLZDP
        F5DOZJAJkU7HcSaNYxMT2H3wCKfb7ViXzqiYuV+pNk6a+AzVTD3M+T5IsxbI5nJI0VBGmpHSSLE3eUB/
        uZvf3cWd73fQ/WwJvc+XsP3DDja379I/YtPoUvoc9wo984QczZBmLeDShUkmU0glk0imGDpOmTjJPNWH
        h4cxSt/z6fYZBZ/+5ZhTWj4fabVe9uQZ0qwFzl3ooH32HNpnCOwNPhSxzZ8dyGvoWnTW9JymGdLsV0Db
        JYaGMCSRYCSiPEG50jA/yA+A7MkzpFkLLC6vYPLEFP2UHh+IcYUTGD9uYuUplxri+s+EMffmGdKsBQ7D
        jhY4WuCQFwD+BsFJawchYz8MAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAGAAAABgAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkHO0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkHO0AAAAkHO0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkHO0AAAAkHO0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAkHO0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAkHO0AAAAAAAAAAAAkHO0kHO0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk
        HO0AAAAkHO0AAAAAAAAkHO0AAAAAAAAkHO0AAAAAAAAAAAAAAAAAAAAAAAAAAAAkHO0AAAAkHO0AAAAA
        AAAAAAAkHO0kHO0AAAAAAADMSD8AAAAAAAAAAAAAAAAAAAAAAAAkHO0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAADMSD8AAADMSD/MSD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMSD8AAAAAAAAAAADM
        SD8AAAAAAADMSD8AAAAAAAAAAAAAAAAAAAAAAAAAAADMSD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADM
        SD8AAAAAAAAAAAAAAAAAAADMSD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMSD8AAAAAAAAA
        AADMSD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMSD/MSD/MSD8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/8AAD//
        AABX/wAAa/8AAH3/AAB9zwAAfrYAAH65AAA/fwAAU/4AAG39AAB++wAAf3cAAH+PAAB//wAA
</value>
  </data>
</root>